create table course (
    id bigint generated by default as identity,
    title varchar(255) not null,
    creator_id bigint not null,
    created_at timestamp not null,
    updated_at timestamp,
    primary key (id)
);

create table ns_user (
    id bigint generated by default as identity,
    user_id varchar(20) not null,
    password varchar(20) not null,
    name varchar(20) not null,
    email varchar(50),
    created_at timestamp not null,
    updated_at timestamp,
    primary key (id)
);

create table question (
    id bigint generated by default as identity,
    created_at timestamp not null,
    updated_at timestamp,
    contents clob,
    deleted boolean not null,
    title varchar(100) not null,
    writer_id bigint,
    primary key (id)
);

create table answer (
    id bigint generated by default as identity,
    created_at timestamp not null,
    updated_at timestamp,
    contents clob,
    deleted boolean not null,
    question_id bigint,
    writer_id bigint,
    primary key (id)
);

create table delete_history (
    id bigint not null,
    content_id bigint,
    content_type varchar(255),
    created_date timestamp,
    deleted_by_id bigint,
    primary key (id)
);


create table session
(
    id               bigint auto_increment primary key,
    course_id        bigint                          not null,
    session_pay_type varchar(10)                     not null,
    session_status   varchar(10) default 'PREPARING' not null,
    capacity         int         default 1           not null,
    start_at         DATETIME                        not null,
    finish_at        DATETIME                        not null
);

comment on table session is '강의';
comment on column session.course_id is '과정 id (fk)';
comment on column session.session_pay_type is '강의료 유형';
comment on column session.capacity is '강의 최대 수강인원';
comment on column session.start_at is '개강일';
comment on column session.finish_at is '종강일';


create table session_cover_img
(
    id         bigint auto_increment  primary key,
    session_id bigint                 not null,
    url        varchar(300)           not null,
    create_at  datetime default now() not null
);

comment on table session_cover_img is '강좌 커버 이미지';
comment on column session_cover_img.session_id is '강좌 id (fk)';
comment on column session_cover_img.url is '이미지 주소';
comment on column session_cover_img.create_at is '생성 시간';


create table session_student
(
    id          bigint auto_increment  primary key,
    session_id  bigint                 not null,
    ns_user_id  bigint                 not null,
    cancel_flag tinyint  default false not null,
    create_at   datetime default now() not null,
    update_at   datetime default now() not null
);

comment on table session_student is '강의_수강생';
comment on column session_student.session_id is '강의 id (fk)';
comment on column session_student.ns_user_id is '수강생 id (fk)';
comment on column session_student.cancel_flag is '수강 취소여부';
comment on column session_student.create_at is '생성일';
comment on column session_student.update_at is '수정일';


-- STEP 4 추가사항
alter table session add recruit_status VARCHAR(10);
comment on column session.recruit_status is '모집 상태';

-- 이렇게 설계하면 한 강의에 여러명의 강사가 있어도 됨
create table session_teacher
(
    id          bigint auto_increment  primary key,
    session_id  bigint                 not null,
    ns_user_id  bigint                 not null,
    is_active   tinyint  default true not null,
    create_at   datetime default now() not null,
    update_at   datetime default now() not null
);

comment on table session_teacher is '강의_강사';
comment on column session_teacher.session_id is '강의 id (fk)';
comment on column session_teacher.ns_user_id is '강사 id (fk)';
comment on column session_teacher.is_active is '강사 활성여부';
comment on column session_teacher.create_at is '생성일';
comment on column session_teacher.update_at is '수정일';


alter table session_student add student_status VARCHAR(10);
alter table session_student add update_teacher_id INTEGER;

comment on column session_student.student_status is '수강생 승인 상태';
comment on column session_student.update_teacher_id is '수강생 승인 상태를 변경한 강사 id';

